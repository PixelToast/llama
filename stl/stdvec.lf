//

~\vMap(\s\fn
    \f\l s (\nm\nx f (fn nm) nx) l
)

~\vFold(\v\iv\fn
    v (\e\nx\st
        nx~fn st e
    ) (\st st) iv
)

~\vFoldMap(\v\iv\fn
    \f\l v (\e\nx\st
        fn st e~\nst\ne
            f ne~nx nst
    ) (\st l) iv
)

~\vConcat(\a\b
    \f\l a f ~b f l
)

~\vExpand(\v\l
    vFold v [] \st\e
        vConcat st (l e)
)

~\vInsertEnd(\v\e
    \f\l v f~f e l
)

~\vInsertStart(\v\e
    \f\l f e~v f l
)

~\vIndexify(\v
    vFoldMap v 0 \st\e tPair (uSucc st)~tPair st e
)

~\vReverse(\v
    v (\e\nx vInsertEnd nx e) []
)

~\vLength(\v
    \f\x v (\e\nx f nx) x
)

~\vFirstWhere(\v\l\d\fn
    v (\e\nx
        l e (fn e) nx
    ) d
)

~\vTake(\v\i
    v (\e\nx
        \idx uIsZero idx []~vInsertStart (nx~uPred idx) e
    ) (\idx []) i
)

~\vSkip(\v\i
    v (\e\nx
        \idx uIsZero idx (vInsertStart (nx~uPred idx) e)~nx~uPred idx
    ) (\idx []) i
)

~\vGet(\v\i\d\fn
    v (\e\nx
        \idx uIsZero idx (fn e)~nx~uPred idx
    ) (\idx d) i
)

~\vWhere(\v\fn
    \f\l v (\e\nx
        fn e (f e nx) nx
    ) l
)

~\vSet(\v\i\d
    vMap (vIndexify v) \e
        uEQ (e tFirst) i d (e tSecond)
)

~\vGenerate(\j\e
    \f\l j (\nx
        f e nx
    ) l
)

~\vGenerateRange(\i\j
    \f\l (uSub j i) (\nx\st
        f (uAdd st i)~nx (uSucc st)
    ) (\st l) 0
)

~\vIsEmpty(\v
    v (\e\nx false) true
)

~\vRemoveLast(\v
    vTake v (uPred~vLength v)
)

~\vRemoveFirst(\v
    vSkip v 1
)

~\vRemoveWhere(\v\fn
    \f\l v (\e\nx
        fn e nx (f e nx)
    ) l
)

~\vSlice(\v\start\end
    vTake (vSkip v start)~uSub end start
)

~\vFirst(\v\d\fn
    v (\e\nx fn e) d
)

~\vLast(\v\d\fn
    v (\e\nx
        (nx tFirst) <false e> nx
    ) <true d> tSecond
)

~\vEQ(\cmp\a\b
    bAnd (uEQ (vLength a)~vLength b)~vFold a <true b> (\st\e
        <(bAnd (st tFirst)~cmp e~vFirst (st tSecond) 0 null) ~vSkip (st tSecond) 1>
    ) tFirst
)

~\vTakeWhile(\v\lm
    \f\l v (\e\nx
        lm e (f e nx)~l
    ) l
)

~\vSkipWhile(\v\lm
    \f\l v (\e\nx\cn
        bOr cn (bNot~lm e) (f e (nx true))~nx false
    ) (\cn l) false
)

~\vInsertAt(\v\i\e
    vConcat (vInsertEnd (vTake v i) e)~vSkip v i
)

~\vReduce(\v\l\d\fn
    vFold (vSkip v 1) (vFirst v d null) l
)

~\vRemoveAt(\v\i
    vExpand (vIndexify v) (\t
        (uEQ (t tFirst) i) [] [~t tSecond]
    )
)

~\vAny(\v\l
    v (\e\nx l e true nx) false
)

~\vDelimitate(\v\dl
    vRemoveLast~vExpand v \e [e dl]
)